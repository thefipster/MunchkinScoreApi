trigger:
- master
- feature/*

pool:
  vmImage: 'ubuntu-18.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: build
    arguments: '--configuration $(buildConfiguration)'

- task: Npm@1
  displayName: 'Npm install'
  inputs:
    command: install
    workingDir: src/TheFipster.Munchkin.Spa

- task: Npm@1
  displayName: 'Build angular'
  inputs:
    command: custom
    customCommand: run build -- --prod --outputPath $(Build.ArtifactStagingDirectory)\spa-client
    workingDir: src/TheFipster.Munchkin.Spa

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--filter FullyQualifiedName~UnitTest --configuration $(buildConfiguration) --collect "Code coverage"'

- script: dotnet test --filter FullyQualifiedName~UnitTest --logger trx --collect "Code coverage"
- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: DotNetCoreCLI@2
  displayName: 'Publish identity api'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: 'src\TheFipster.Munchkin.Identity.Api\TheFipster.Munchkin.Identity.Api.csproj --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\identity-api'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish gaming api'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: 'src\TheFipster.Munchkin.Gaming.Api\TheFipster.Munchkin.Gaming.Api.csproj --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\gaming-api'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish admin api'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: 'src\TheFipster.Munchkin.Admin.Api\TheFipster.Munchkin.Admin.Api.csproj --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\admin-api'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish cardstash api'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: 'src\TheFipster.Munchkin.CardStash.Api\TheFipster.Munchkin.CardStash.Api.csproj --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\cardstash-api'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish statistics api'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: 'src\TheFipster.Munchkin.Statistics.Api\TheFipster.Munchkin.Statistics.Api.csproj --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\statistics-api'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish sample api'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: 'src\TheFipster.Munchkin.Sample.Api\TheFipster.Munchkin.Sample.Api.csproj --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\sample-api'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish monitoring api'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: 'src\TheFipster.Munchkin.Monitoring.Api\TheFipster.Munchkin.Monitoring.Api.csproj --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\monitoring-api'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish cli client'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: 'src\TheFipster.Munchkin.Cli.Client\TheFipster.Munchkin.Cli.Client.csproj --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\cli-client'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'apps'
    publishLocation: 'Container'